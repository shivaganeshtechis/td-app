{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement/Desktop/to-do-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// import { booleanTypeAnnotation } from '@babel/types';\nimport React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport { stringify, v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete);\n    set;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearTodos,\n      children: \"Clear Completed Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [todos.filter(todo => !todo.complete).length, \" left to do\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"qH2GEr92xkIFQxR2Djx4V7Ti/yU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/musubimanagement/Desktop/to-do-app/src/App.js"],"names":["React","useState","useRef","useEffect","TodoList","stringify","v4","uuidv4","LOCAL_STORAGE_KEY","App","todos","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","toggleTodo","id","newTodos","todo","find","complete","handleAddTodo","e","name","current","value","prevTodos","handleClearTodos","filter","set","length"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,EAAE,IAAIC,MAA1B,QAAwC,MAAxC;;;AAEA,MAAMC,iBAAiB,GAAG,eAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAMW,WAAW,GAAGV,MAAM,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,iBAArB,CAAX,CAApB;AACA,QAAIK,WAAJ,EAAiBF,QAAQ,CAACE,WAAD,CAAR;AAClB,GAHQ,EAGP,EAHO,CAAT;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,YAAY,CAACE,OAAb,CAAqBV,iBAArB,EAAwCM,IAAI,CAACT,SAAL,CAAeK,KAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASS,UAAT,CAAoBC,EAApB,EAAwB;AACtB,UAAMC,QAAQ,GAAG,CAAC,GAAGX,KAAJ,CAAjB;AACA,UAAMY,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcD,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAlC,CAAb;AACAE,IAAAA,IAAI,CAACE,QAAL,GAAgB,CAACF,IAAI,CAACE,QAAtB;AACAb,IAAAA,QAAQ,CAACU,QAAD,CAAR;AACD;;AAED,WAASI,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,UAAMC,IAAI,GAAGf,WAAW,CAACgB,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACjBhB,IAAAA,QAAQ,CAACmB,SAAS,IAAI;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAACV,QAAAA,EAAE,EAAEb,MAAM,EAAX;AAAeoB,QAAAA,IAAI,EAAEA,IAArB;AAA2BH,QAAAA,QAAQ,EAAE;AAArC,OAAf,CAAP;AACD,KAFO,CAAR;AAGAZ,IAAAA,WAAW,CAACgB,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AAED,WAASE,gBAAT,GAA4B;AAC1B,UAAMV,QAAQ,GAAGX,KAAK,CAACsB,MAAN,CAAaV,IAAI,IAAI,CAACA,IAAI,CAACE,QAA3B,CAAjB;AACAS,IAAAA,GAAG;AACJ;;AACD,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEvB,KAAjB;AAAwB,MAAA,UAAU,EAAES;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,GAAG,EAAEP,WAAZ;AAAyB,MAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEa,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEM,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,iBAAMrB,KAAK,CAACsB,MAAN,CAAaV,IAAI,IAAI,CAACA,IAAI,CAACE,QAA3B,EAAqCU,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GA1CQzB,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["// import { booleanTypeAnnotation } from '@babel/types';\nimport React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList'\nimport { stringify, v4 as uuidv4 } from \"uuid\";\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] =  useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n  },[])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    setTodos(prevTodos => {\n      return [...prevTodos, {id: uuidv4(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    set\n  }\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={handleClearTodos}>Clear Completed Todos</button>\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}