{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement/Desktop/to-do-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// import { booleanTypeAnnotation } from '@babel/types';\nimport React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport { stringify, v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useE;\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear Completed Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"0 left to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"52iFtPgzl31SmfSv7XjBgNY9Iv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/musubimanagement/Desktop/to-do-app/src/App.js"],"names":["React","useState","useRef","useEffect","TodoList","stringify","v4","uuidv4","LOCAL_STORAGE_KEY","App","todos","setTodos","todoNameRef","useE","localStorage","setItem","JSON","handleAddTodo","e","name","current","value","prevTodos","id","complete"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,EAAE,IAAIC,MAA1B,QAAwC,MAAxC;;;AAEA,MAAMC,iBAAiB,GAAG,eAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAMW,WAAW,GAAGV,MAAM,EAA1B;AAEAW,EAAAA,IAAI;AAEJV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAACC,OAAb,CAAqBP,iBAArB,EAAwCQ,IAAI,CAACX,SAAL,CAAeK,KAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASO,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,UAAMC,IAAI,GAAGP,WAAW,CAACQ,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACjBR,IAAAA,QAAQ,CAACW,SAAS,IAAI;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAACC,QAAAA,EAAE,EAAEhB,MAAM,EAAX;AAAeY,QAAAA,IAAI,EAAEA,IAArB;AAA2BK,QAAAA,QAAQ,EAAE;AAArC,OAAf,CAAP;AACD,KAFO,CAAR;AAGAZ,IAAAA,WAAW,CAACQ,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEX;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,GAAG,EAAEE,WAAZ;AAAyB,MAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEK,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GA3BQR,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["// import { booleanTypeAnnotation } from '@babel/types';\nimport React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList'\nimport { stringify, v4 as uuidv4 } from \"uuid\";\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] =  useState([])\n  const todoNameRef = useRef()\n\n  useE\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    setTodos(prevTodos => {\n      return [...prevTodos, {id: uuidv4(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n  return (\n    <>\n      <TodoList todos={todos} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button>Clear Completed Todos</button>\n      <div>0 left to do</div>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}