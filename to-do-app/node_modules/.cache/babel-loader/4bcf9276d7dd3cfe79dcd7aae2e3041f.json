{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement/Desktop/to-do-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// import { booleanTypeAnnotation } from '@babel/types';\nimport React, { useState, useRef } from 'react';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {}];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear Completed Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"0 left to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Co+oX9O3pMnlY40DokhjoAfbhpA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/musubimanagement/Desktop/to-do-app/src/App.js"],"names":["React","useState","useRef","TodoList","App","todos","setTodos","todoNameRef","handleAddTodo","e","name","current","value","prevTodos"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAMM,WAAW,GAAGL,MAAM,EAA1B;;AAEA,WAASM,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,UAAMC,IAAI,GAAGH,WAAW,CAACI,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACjBJ,IAAAA,QAAQ,CAACO,SAAS,IAAI;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAe,EAAf,CAAP;AACD,KAFO,CAAR;AAGAN,IAAAA,WAAW,CAACI,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEP;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,GAAG,EAAEE,WAAZ;AAAyB,MAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GArBQJ,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["// import { booleanTypeAnnotation } from '@babel/types';\nimport React, { useState, useRef } from 'react';\nimport TodoList from './TodoList'\n\nfunction App() {\n  const [todos, setTodos] =  useState([])\n  const todoNameRef = useRef()\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    setTodos(prevTodos => {\n      return [...prevTodos, {}]\n    })\n    todoNameRef.current.value = null\n  }\n  return (\n    <>\n      <TodoList todos={todos} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button>Clear Completed Todos</button>\n      <div>0 left to do</div>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}